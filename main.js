!function(){"use strict";var e=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}_toggleButtonState(){this._hasInvalidInput(this._inputEls)?this._disableButton():this._enableButton()}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_setEventListener(){this._inputEls=[...this._formElement.querySelectorAll(this._inputSelector)],this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState(this._inputEls,this._submitButton)}))}))}resetValidation(){this._submitButton.disabled||this._disableButton()}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListener()}},t=class{constructor(e,t,s){this._name=e.name,this._link=e.link,this._cardElement=t,this._handlePreviewPicture=s}_setEventListeners(){this._deleteButton.addEventListener("click",this._handleDeleteCard),this._cardImage.addEventListener("click",(()=>this._handlePreviewPicture({name:this._name,link:this._link}))),this._likeButton.addEventListener("click",this._handleLikeIcon)}_handleLikeIcon=()=>{this._likeButton.classList.toggle("card__like-button_active")};_handleDeleteCard=()=>{this._element.remove(),this._element=null};_getTemplate(){return this._cardElement.content.querySelector(".card").cloneNode(!0)}getView(){return this._element=this._getTemplate(),this._likeButton=this._element.querySelector(".card__like-button"),this._deleteButton=this._element.querySelector(".card__delete-button"),this._cardImage=this._element.querySelector(".card__image"),this._element.querySelector(".card__title").textContent=this._name,this._cardImage.src=this._link,this._cardImage.alt=this._name,this._setEventListeners(),this._element}};class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._closeButton=this._popupElement.querySelector(".popup__close")}_handleEscClose=e=>{"Escape"===e.key&&this.close()};open(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keyup",this._handleEscClose)}close(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keyup",this._handleEscClose)}setEventListeners(){this._closeButton.addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("mousedown",(e=>{e.target===this._popupElement&&this.close()}))}}class n extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".popup__form"),this._inputList=this._popupForm.querySelectorAll(".popup__form-input"),this._handleFormSubmit=t}close(){this._popupForm.reset(),super.close()}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}}document.querySelector("#add-NewCard-popup");const i=document.querySelector("#add-newCard-button"),r=(document.querySelector("#new-image-title-input"),document.querySelector("#new-image-link-input"),document.querySelector("#profile-title-input")),o=document.querySelector("#profile-description-input"),l=document.querySelector("#profile-edit-button"),u=(document.querySelector("#profile-edit-popup"),document.querySelector(".profile__title")),a=document.querySelector(".profile__description"),p=(document.querySelector(".cards__list"),document.querySelector("#previewImage-popup"),document.querySelector(".popup__preview-image"),document.querySelector(".popup__image-title"),document.forms["profile-edit-form"],document.forms["new-card-form"],document.querySelector("#card-template"));function c(e){return new t(e,p,m).getView()}function m(e){S.open(e)}l.addEventListener("click",(()=>{const e=f.getUserInfo();r.value=e.userName,o.value=e.userDescription,_["profile-edit-form"].resetValidation(),v.open()})),i.addEventListener("click",(()=>{_["new-card-form"].resetValidation(),E.open()}));const _={};var d;d={inputSelector:".popup__form-input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__form-input_type_error",errorClass:"popup__error_visible",formSelector:".popup__form"},Array.from(document.querySelectorAll(d.formSelector)).forEach((t=>{const s=new e(d,t),n=t.getAttribute("name");_[n]=s,s.enableValidation()}));const h=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>h.addItem(c(e))},".cards__list");h.renderItems();const E=new n("#add-NewCard-popup",(function(e){h.addItem(c({name:e.title,link:e.link})),E.close()}));E.setEventListeners();const v=new n("#profile-edit-popup",(function(e){f.setUserInfo(e),v.close()}));v.setEventListeners();const S=new class extends s{constructor(e){super({popupSelector:e}),this._popupImageElement=this._popupElement.querySelector(".popup__preview-image"),this._popupImageTitle=this._popupElement.querySelector(".popup__image-title")}open(e){let{name:t,link:s}=e;this._popupImageElement.alt=t,this._popupImageElement.src=s,this._popupImageTitle.textContent=t,super.open()}}("#previewImage-popup");S.setEventListeners();const f=new class{constructor(e){let{userNameSelector:t,userDescriptionSelector:s}=e;this._userNameElement=t,this._userDescriptionElement=s}getUserInfo(){return{userName:this._userNameElement.textContent,userDescription:this._userDescriptionElement.textContent}}setUserInfo(e){this._userNameElement.textContent=e.title,this._userDescriptionElement.textContent=e.description}}({userNameSelector:u,userDescriptionSelector:a})}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,